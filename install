#!/bin/bash

# File cofigurations
PACKAGES="tmux zsh vim curl exuberant-ctags mercurial pkg-config"
ZSH_ALIASES="$HOME/.zsh_aliases"

# Find out which distro for installation
if [ -f /etc/debian_version ]; then
    printf "Debian found\n"
    PACKAGE_MANAGER="sudo apt-get install"
elif [ -f /etc/arch-release ]; then
    printf "Arch found\n"
    PACKAGE_MANAGER="sudo pacman -S"
else
    printf "No valid distro found. Aborting.\n"
    exit 1
fi

# Install packages
printf "\nInstalling packages\n"
$PACKAGE_MANAGER $PACKAGES

# Install go and go tools
mkdir -p $HOME/go
mkdir -p $HOME/Programs
mkdir -p $HOME/Programs/go
cd $HOME/Programs
hg clone -u release https://code.google.com/p/go
cd -
cd $HOME/go/src
./all.bash
cd -

export GOPATH=$HOME/go
export GOROOT=$HOME/Programs/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
printf "export GOPATH=\$HOME/go\n" >> "$HOME/.zshrc"
printf "export GOROOT=\$HOME/Programs/go\n" >> "$HOME/.zshrc"
printf "export GOPATH=\$HOME/go\n" >> "$HOME/.bashrc"
printf "export GOROOT=\$HOME/Programs/go\n" >> "$HOME/.bashrc"
printf "export PATH=\$PATH:$GOROOT/bin:$GOPATH/bin\n" >> "$HOME/.zshrc"
printf "export PATH=\$PATH:$GOROOT/bin:$GOPATH/bin\n" >> "$HOME/.bashrc"

go get golang.org/x/tools/cmd/goimports
go get -u github.com/jstemmer/gotags
go get -u github.com/nsf/gocode

# Configuring
printf "\nMaking zsh default shell:\n"
chsh `whoami` -s /bin/zsh

printf "\nInstalling oh-my-zsh\n"
curl -L http://install.ohmyz.sh | zsh

printf "\nCreating and linking .zsh_aliases and adding tmux\n"
printf "alias tmux='tmux -2'\n" >> $ZSH_ALIASES
printf "if [ -f ~/.zsh_aliases ]; then\n  . ~/.zsh_aliases\nfi\n" >> "$HOME/.zshrc"
printf "export TERM=\"xterm-256color\"\n" >> "$HOME/.zshrc"
printf "export TERM=\"xterm-256color\"\n" >> "$HOME/.bashrc"

cp ".tmux.conf" "$HOME/.tmux.conf"

printf "\nConfiguring vim and installing some plugins\n"
mkdir -p ~/.vim/autoload ~/.vim/bundle
curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim

cd "$HOME/.vim/bundle"
git clone git://github.com/tpope/vim-fugitive.git
vim -u NONE -c "helptags vim-fugitive/doc" -c q
git clone https://github.com/majutsushi/tagbar.git
git clone https://github.com/Townk/vim-autoclose.git
git clone https://github.com/ervandew/supertab.git
git clone https://github.com/scrooloose/syntastic.git
git clone https://github.com/scrooloose/nerdtree.git

git clone https://github.com/dgryski/vim-godef.git
git clone https://github.com/fatih/vim-go.git
git clone git@github.com:Blackrush/vim-gocode.git
mkdir -p node
git clone https://github.com/moll/vim-node.git node
git clone https://github.com/jelera/vim-javascript-syntax.git
git clone https://github.com/digitaltoad/vim-jade.git

git clone https://github.com/shawncplus/phpcomplete.vim.git
git clone https://github.com/joonty/vim-phpqa.git
git clone https://github.com/evidens/vim-twig.git
cd -

mkdir -p "$HOME/.vim/colors"
cp .vim/colors/sahara.vim  "$HOME/.vim/colors/sahara.vim"
cat .vimrc > "$HOME/.vimrc"

printf "\nConfiguring git standards\n"
git config --global user.email "herrschenck@gmail.de"
git config --global user.name "Martin Schenck"

# Git Hooks and ctags hook
printf "\nConfiguring git hooks\n"
git config --global init.templatedir '~/.git_template'
mkdir -p "$HOME/.git_template/hooks"
cp ".git_template/hooks/ctags" "$HOME/.git_template/hooks/ctags"
cp ".git_template/hooks/ctag-hook" "$HOME/.git_template/hooks/post-commit"
cp ".git_template/hooks/ctag-hook" "$HOME/.git_template/hooks/post-merge"
cp ".git_template/hooks/ctag-hook" "$HOME/.git_template/hooks/post-checkout"
cp ".git_template/hooks/post-rewrite" "$HOME/.git_template/hooks/post-rewrite"

chmod +x "$HOME/.git_template/hooks/post-commit"
chmod +x "$HOME/.git_template/hooks/post-merge"
chmod +x "$HOME/.git_template/hooks/post-checkout"
chmod +x "$HOME/.git_template/hooks/post-rewrite"
